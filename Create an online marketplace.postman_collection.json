{
	"info": {
		"_postman_id": "19596a5b-25ff-4b92-bdf5-3253c6092376",
		"name": "Create an online marketplace",
		"description": "## Introduction\n\nThe Marketplace collection is a group of Paystack APIs that you should use to build an online marketplace. An online marketplace allows third party vendors sell their goods and the platform receives a share of each sale. This process can be automated using Paystack.\n\n## **Prerequisites**\n\n1. [Sign up](https://paystack.com/signup) on Paystack and retrieve your test Secret API Key. (see [guide for more](https://support.paystack.com/hc/en-us/articles/360009881600-Paystack-Test-Keys-Live-Keys-and-Webhooks))\n2. Setup your API key as a collection variable on Postman\n3. Checkout our [Developer Docs](https://paystack.com/docs) and [API Reference](https://paystack.com/docs/api/) for detailed explanations\n    \n\n## **Getting Started**\n\nWe’re going to assume you’ve already [signed up on Paystack](https://paystack.com/signup)\n\n### **Adding the collection to your Postman**\n\nGo to the [Paystack’s public workspace](https://www.postman.com/paystack-developers/workspace/paystack-api/collection/20813848-d7440b43-7461-44f5-868e-bb49b564832b?ctx=documentation) on Postman and fork the collection you’re interested in testing.\n\n<img src=\"https://content.pstmn.io/999da048-ba6b-4de0-8343-0df621312400/U2NyZWVuc2hvdCAyMDIyLTEwLTEzIGF0IDEzLjQzLjU4LnBuZw==\" width=\"289\" height=\"475\">\n\nGive your collection a memorable label to differentiate it from the original collection and add it to your preferred workspace. Checking the “Watch original collection” option allows your collection to get updated as we update the collection.\n\n<img src=\"https://content.pstmn.io/acf8b5de-7609-45ff-83fb-61b491047f9b/U2NyZWVuc2hvdCAyMDIyLTEwLTEzIGF0IDEzLjUxLjA3LnBuZw==\" width=\"373\" height=\"400\">\n\nAfter importing it, you should see it in your collections sidebar with the label you provided.\n\n<img src=\"https://content.pstmn.io/cdd4ca1b-55ea-4524-b4fc-6bcfa06db2fa/U2NyZWVuc2hvdCAyMDIyLTEwLTEzIGF0IDE0LjQwLjU3LnBuZw==\" width=\"379\" height=\"123\">\n\n### **Import collection from Github**\n\nIf you’d like to use a different API testing tool, you can clone or fork the [Paystack Open API](https://github.com/PaystackOSS/openapi) repository from Github and use the files in the `use_cases` folder.\n\nOnce you’ve setup your Paystack account, get your [test secret key](https://support.paystack.com/hc/en-us/articles/360009881600-Paystack-Test-Keys-Live-Keys-and-Webhooks) and add it as a [collection variable](https://learning.postman.com/docs/sending-requests/variables/#variable-scopes) on the Variables tab on Postman.\n\n<img src=\"https://content.pstmn.io/99cd58ca-8221-4124-b307-830f2364942c/U2NyZWVuc2hvdCAyMDIyLTEwLTEzIGF0IDE3LjAwLjM3LnBuZw==\" width=\"405\" height=\"270\">\n\nSwitch to the Authorization tab and clear the Token field and use two curly braces and enter the variable name you setup.\n\nThe value of `secret_key` should appear when you hover your mouse on the variable as shown below.\n\n<img src=\"https://content.pstmn.io/a26831d8-08b0-4b4a-a377-4001b1582896/U2NyZWVuc2hvdCAyMDIyLTEwLTEzIGF0IDE3LjA0LjM4LnBuZw==\" width=\"399\" height=\"284\">\n\nIf everything looks good, save your changes and you’re ready to explore the collection!\n\n### **Using the collection**\n\nEach endpoint in the collection has example request data and responses. The responses show you how the API responds in different scenarios.\n\n<img src=\"https://content.pstmn.io/4fd74703-6628-4a4e-89bd-4d337eb41c35/U2NyZWVuc2hvdCAyMDIyLTEwLTEzIGF0IDE4LjEwLjEyLnBuZw==\">\n\n## APIs in this collection\n\n### Subaccount\n\nBefore accepting payments in the marketplace, you need to onboard vendors by creating subaccounts. The [subaccount API](https://paystack.com/docs/payments/split-payments#create-a-subaccount) is used to set up the bank account or mobile money account each vendor will receive their sales made less the platform fee. The subaccount will be automatically settled at the same schedule as the main account. You should ensure that the details provided are accurate using our [Verification APIs](https://paystack.com/docs/identity-verification/verify-account-number).\n\n### Split API\n\nUsing the Split API, you can create fixed splits on transactions. This is best used when the split values are agreed upon before hand. It also allows a transaction to be shared among more parties. Once the split has been created, you can use it to [initialize a transaction](https://paystack.com/docs/payments/multi-split-payments#initializing-a-transaction).\n\n<img src=\"https://content.pstmn.io/4ab802e9-0e6d-433c-ac17-4352d946fa67/U2NyZWVuc2hvdCAyMDIyLTEwLTI1IGF0IDE1LjA2LjU2LnBuZw==\" alt=\"\">\n\nIn cases where customers are able to buy from several vendors during checkout, the [Dynamic split feature](https://paystack.com/docs/payments/multi-split-payments#dynamic-splits) would work best. Essentially, it is initialising a transaction with a Split object with the shares for each subaccount. The subaccounts will be settled for free on the same schedule as the main account.\n\n### Initialize Transaction\n\nHaving setup subaccounts and transaction splits, we’re now able to initialize transactions depending on the various sale share agreements we have.\n\n### Refunds\n\nMarketplaces have to factor in refunds in cases where customers aren’t satisfied with the product or service. Our [Refunds API](https://paystack.com/docs/payments/refunds) allows you to create transaction refunds either partially or fully and Paystack will refund the customer.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32347924"
	},
	"item": [
		{
			"name": "Create Subaccount",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "business_name",
							"value": "Some Subaccount",
							"description": "(Required) Name of business for subaccount"
						},
						{
							"key": "settlement_bank",
							"value": "011",
							"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
						},
						{
							"key": "account_number",
							"value": "0000000000",
							"description": "(Required) Bank account number"
						},
						{
							"key": "percentage_charge",
							"value": "0.3",
							"description": "(Required) Transaction percentage that the subaccount gets"
						},
						{
							"key": "description",
							"value": "A service provider",
							"description": "A description for this subaccount"
						},
						{
							"key": "primary_contact_email",
							"value": "sub@example.com",
							"description": "A contact email for the subaccount"
						},
						{
							"key": "primary_contact_name",
							"value": "person@example.com",
							"description": "The name of the contact person for this subaccount"
						},
						{
							"key": "primary_contact_phone",
							"value": "esse deserunt",
							"description": "A phone number to call for this subaccount"
						},
						{
							"key": "category",
							"value": "General supplies",
							"description": "Stringified JSON object of custom data"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/subaccount",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"subaccount"
					]
				},
				"description": "Create a new subaccount"
			},
			"response": [
				{
					"name": "Subaccount Creation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "business_name",
									"value": "Some Subaccount",
									"description": "(Required) Name of business for subaccount"
								},
								{
									"key": "settlement_bank",
									"value": "011",
									"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
								},
								{
									"key": "account_number",
									"value": "0000000000",
									"description": "(Required) Bank account number"
								},
								{
									"key": "percentage_charge",
									"value": "0.3",
									"description": "(Required) Transaction percentage that the subaccount gets"
								},
								{
									"key": "description",
									"value": "A service provider",
									"description": "A description for this subaccount"
								},
								{
									"key": "primary_contact_email",
									"value": "sub@example.com",
									"description": "A contact email for the subaccount"
								},
								{
									"key": "primary_contact_name",
									"value": "person@example.com",
									"description": "The name of the contact person for this subaccount"
								},
								{
									"key": "primary_contact_phone",
									"value": "esse deserunt",
									"description": "A phone number to call for this subaccount"
								},
								{
									"key": "category",
									"value": "General supplies",
									"description": "Stringified JSON object of custom data"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subaccount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subaccount"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": true,\n  \"message\": \"Subaccount created\",\n  \"data\": {\n    \"business_name\": \"Cheese Sticks\",\n    \"account_number\": \"0123456789\",\n    \"percentage_charge\": 0.2,\n    \"settlement_bank\": \"Guaranty Trust Bank\",\n    \"integration\": 428626,\n    \"domain\": \"test\",\n    \"subaccount_code\": \"ACCT_xxxxxxxxxxxxx\",\n    \"is_verified\": false,\n    \"settlement_schedule\": \"AUTO\",\n    \"active\": true,\n    \"migrate\": false,\n    \"id\": 37614,\n    \"createdAt\": \"2020-05-19T11:54:20.655Z\",\n    \"updatedAt\": \"2020-05-19T11:54:20.655Z\"\n  }\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "business_name",
									"value": "Some Subaccount",
									"description": "(Required) Name of business for subaccount"
								},
								{
									"key": "settlement_bank",
									"value": "011",
									"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
								},
								{
									"key": "account_number",
									"value": "0000000000",
									"description": "(Required) Bank account number"
								},
								{
									"key": "percentage_charge",
									"value": "0.3",
									"description": "(Required) Transaction percentage that the subaccount gets"
								},
								{
									"key": "description",
									"value": "A service provider",
									"description": "A description for this subaccount"
								},
								{
									"key": "primary_contact_email",
									"value": "sub@example.com",
									"description": "A contact email for the subaccount"
								},
								{
									"key": "primary_contact_name",
									"value": "person@example.com",
									"description": "The name of the contact person for this subaccount"
								},
								{
									"key": "primary_contact_phone",
									"value": "esse deserunt",
									"description": "A phone number to call for this subaccount"
								},
								{
									"key": "category",
									"value": "General supplies",
									"description": "Stringified JSON object of custom data"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subaccount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subaccount"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "business_name",
									"value": "Some Subaccount",
									"description": "(Required) Name of business for subaccount"
								},
								{
									"key": "settlement_bank",
									"value": "011",
									"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
								},
								{
									"key": "account_number",
									"value": "0000000000",
									"description": "(Required) Bank account number"
								},
								{
									"key": "percentage_charge",
									"value": "0.3",
									"description": "(Required) Transaction percentage that the subaccount gets"
								},
								{
									"key": "description",
									"value": "A service provider",
									"description": "A description for this subaccount"
								},
								{
									"key": "primary_contact_email",
									"value": "sub@example.com",
									"description": "A contact email for the subaccount"
								},
								{
									"key": "primary_contact_name",
									"value": "person@example.com",
									"description": "The name of the contact person for this subaccount"
								},
								{
									"key": "primary_contact_phone",
									"value": "esse deserunt",
									"description": "A phone number to call for this subaccount"
								},
								{
									"key": "category",
									"value": "General supplies",
									"description": "Stringified JSON object of custom data"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subaccount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subaccount"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create Split",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Testing Accounts",
							"description": "(Required) Name of the transaction split"
						},
						{
							"key": "type",
							"value": "flat",
							"description": "(Required) The type of transaction split you want to create."
						},
						{
							"key": "subaccounts",
							"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
							"description": "(Required) A list of object containing subaccount code and number of shares"
						},
						{
							"key": "subaccounts",
							"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
							"description": "(Required) A list of object containing subaccount code and number of shares"
						},
						{
							"key": "currency",
							"value": "ZAR",
							"description": "(Required) The transaction currency"
						},
						{
							"key": "bearer_type",
							"value": "all-proportional",
							"description": "This allows you specify how the transaction charge should be processed"
						},
						{
							"key": "bearer_subaccount",
							"value": "ACCT_03tb3u7jgwb4",
							"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/split",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"split"
					]
				},
				"description": "Create a new transaction split"
			},
			"response": [
				{
					"name": "Split Creation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Testing Accounts",
									"description": "(Required) Name of the transaction split"
								},
								{
									"key": "type",
									"value": "percentage",
									"description": "(Required) The type of transaction split you want to create."
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "currency",
									"value": "NGN",
									"description": "(Required) The transaction currency"
								},
								{
									"key": "bearer_type",
									"value": "all-proportional",
									"description": "This allows you specify how the transaction charge should be processed"
								},
								{
									"key": "bearer_subaccount",
									"value": "ACCT_03tb3u7jgwb4",
									"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"split"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": true,\n  \"message\": \"Split created\",\n  \"data\": {\n    \"id\": 142,\n    \"name\": \"Test Doc\",\n    \"type\": \"percentage\",\n    \"currency\": \"NGN\",\n    \"integration\": 428626,\n    \"domain\": \"test\",\n    \"split_code\": \"SPL_e7jnRLtzla\",\n    \"active\": true,\n    \"bearer_type\": \"subaccount\",\n    \"bearer_subaccount\": 40809,\n    \"createdAt\": \"2020-06-30T11:42:29.150Z\",\n    \"updatedAt\": \"2020-06-30T11:42:29.150Z\",\n    \"subaccounts\": [\n      {\n        \"subaccount\": {\n          \"id\": 40809,\n          \"subaccount_code\": \"ACCT_z3x6z3nbo14xsil\",\n          \"business_name\": \"Business Name\",\n          \"description\": \"Business Description\",\n          \"primary_contact_name\": null,\n          \"primary_contact_email\": null,\n          \"primary_contact_phone\": null,\n          \"metadata\": null,\n          \"percentage_charge\": 20,\n          \"settlement_bank\": \"Business Bank\",\n          \"account_number\": 1234567890\n        },\n        \"share\": 20\n      },\n      {\n        \"subaccount\": {\n          \"id\": 40809,\n          \"subaccount_code\": \"ACCT_pwwualwty4nhq9d\",\n          \"business_name\": \"Business Name\",\n          \"description\": \"Business Description\",\n          \"primary_contact_name\": null,\n          \"primary_contact_email\": null,\n          \"primary_contact_phone\": null,\n          \"metadata\": null,\n          \"percentage_charge\": 20,\n          \"settlement_bank\": \"Business Bank\",\n          \"account_number\": \"0123456789\"\n        },\n        \"share\": 30\n      }\n    ],\n    \"total_subaccounts\": 2\n  }\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Testing Accounts",
									"description": "(Required) Name of the transaction split"
								},
								{
									"key": "type",
									"value": "percentage",
									"description": "(Required) The type of transaction split you want to create."
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "currency",
									"value": "NGN",
									"description": "(Required) The transaction currency"
								},
								{
									"key": "bearer_type",
									"value": "all-proportional",
									"description": "This allows you specify how the transaction charge should be processed"
								},
								{
									"key": "bearer_subaccount",
									"value": "ACCT_03tb3u7jgwb4",
									"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"split"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Testing Accounts",
									"description": "(Required) Name of the transaction split"
								},
								{
									"key": "type",
									"value": "percentage",
									"description": "(Required) The type of transaction split you want to create."
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "currency",
									"value": "NGN",
									"description": "(Required) The transaction currency"
								},
								{
									"key": "bearer_type",
									"value": "all-proportional",
									"description": "This allows you specify how the transaction charge should be processed"
								},
								{
									"key": "bearer_subaccount",
									"value": "ACCT_03tb3u7jgwb4",
									"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"split"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Initialize Transaction",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "person@email.com",
							"description": "(Required) Customer's email address"
						},
						{
							"key": "amount",
							"value": "10247",
							"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
						},
						{
							"key": "currency",
							"value": "GHS",
							"description": "The transaction currency"
						},
						{
							"key": "reference",
							"value": "123.uniq=ref-",
							"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
						},
						{
							"key": "callback_url",
							"value": "https://example.com/",
							"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
						},
						{
							"key": "plan",
							"value": "PLN_123wede",
							"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
						},
						{
							"key": "invoice_limit",
							"value": "10",
							"description": "Number of times to charge customer during subscription to plan"
						},
						{
							"key": "metadata",
							"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
							"description": "Stringified JSON object of custom data"
						},
						{
							"key": "channels",
							"value": "bank",
							"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
						},
						{
							"key": "split_code",
							"value": "SPL_123AbZ",
							"description": "The split code of the transaction split"
						},
						{
							"key": "subaccount",
							"value": "ACCT_23abcdefgh",
							"description": "The code for the subaccount that owns the payment"
						},
						{
							"key": "transaction_charge",
							"value": "12300",
							"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
						},
						{
							"key": "bearer",
							"value": "subaccount",
							"description": "The bearer of the transaction charge"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/initialize",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"initialize"
					]
				},
				"description": "Create a new transaction"
			},
			"response": [
				{
					"name": "Request successful",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "person@email.com",
									"description": "(Required) Customer's email address"
								},
								{
									"key": "amount",
									"value": "10247",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "currency",
									"value": "GHS",
									"description": "The transaction currency"
								},
								{
									"key": "reference",
									"value": "123.uniq=ref-",
									"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
								},
								{
									"key": "callback_url",
									"value": "https://example.com/",
									"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
								},
								{
									"key": "plan",
									"value": "PLN_123wede",
									"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
								},
								{
									"key": "invoice_limit",
									"value": "10",
									"description": "Number of times to charge customer during subscription to plan"
								},
								{
									"key": "metadata",
									"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "channels",
									"value": "bank",
									"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
								},
								{
									"key": "split_code",
									"value": "SPL_123AbZ",
									"description": "The split code of the transaction split"
								},
								{
									"key": "subaccount",
									"value": "ACCT_23abcdefgh",
									"description": "The code for the subaccount that owns the payment"
								},
								{
									"key": "transaction_charge",
									"value": "12300",
									"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
								},
								{
									"key": "bearer",
									"value": "subaccount",
									"description": "The bearer of the transaction charge"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/initialize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"initialize"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": true,\n  \"message\": \"Authorization URL created\",\n  \"data\": {\n    \"authorization_url\": \"https://checkout.paystack.com/spnajmit2hgi2c1\",\n    \"access_code\": \"spandaoende\",\n    \"reference\": \"ad123ada\"\n  }\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "person@email.com",
									"description": "(Required) Customer's email address"
								},
								{
									"key": "amount",
									"value": "10247",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "currency",
									"value": "GHS",
									"description": "The transaction currency"
								},
								{
									"key": "reference",
									"value": "123.uniq=ref-",
									"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
								},
								{
									"key": "callback_url",
									"value": "https://example.com/",
									"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
								},
								{
									"key": "plan",
									"value": "PLN_123wede",
									"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
								},
								{
									"key": "invoice_limit",
									"value": "10",
									"description": "Number of times to charge customer during subscription to plan"
								},
								{
									"key": "metadata",
									"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "channels",
									"value": "bank",
									"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
								},
								{
									"key": "split_code",
									"value": "SPL_123AbZ",
									"description": "The split code of the transaction split"
								},
								{
									"key": "subaccount",
									"value": "ACCT_23abcdefgh",
									"description": "The code for the subaccount that owns the payment"
								},
								{
									"key": "transaction_charge",
									"value": "12300",
									"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
								},
								{
									"key": "bearer",
									"value": "subaccount",
									"description": "The bearer of the transaction charge"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/initialize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"initialize"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "person@email.com",
									"description": "(Required) Customer's email address"
								},
								{
									"key": "amount",
									"value": "10247",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "currency",
									"value": "GHS",
									"description": "The transaction currency"
								},
								{
									"key": "reference",
									"value": "123.uniq=ref-",
									"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
								},
								{
									"key": "callback_url",
									"value": "https://example.com/",
									"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
								},
								{
									"key": "plan",
									"value": "PLN_123wede",
									"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
								},
								{
									"key": "invoice_limit",
									"value": "10",
									"description": "Number of times to charge customer during subscription to plan"
								},
								{
									"key": "metadata",
									"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "channels",
									"value": "bank",
									"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
								},
								{
									"key": "split_code",
									"value": "SPL_123AbZ",
									"description": "The split code of the transaction split"
								},
								{
									"key": "subaccount",
									"value": "ACCT_23abcdefgh",
									"description": "The code for the subaccount that owns the payment"
								},
								{
									"key": "transaction_charge",
									"value": "12300",
									"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
								},
								{
									"key": "bearer",
									"value": "subaccount",
									"description": "The bearer of the transaction charge"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/initialize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"initialize"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create Refund",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "transaction",
							"value": "T685312322670591",
							"description": "(Required) Transaction reference or id"
						},
						{
							"key": "amount",
							"value": "10000",
							"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
						},
						{
							"key": "currency",
							"value": "ZAR",
							"description": "Three-letter ISO currency"
						},
						{
							"key": "customer_note",
							"value": "Refund for transaction T685312322670591",
							"description": "Customer reason"
						},
						{
							"key": "merchant_note",
							"value": "Refund for transaction T685312322670591 by test@me.com",
							"description": "Merchant reason"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/refund",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"refund"
					]
				}
			},
			"response": [
				{
					"name": "Request successful",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transaction",
									"value": "T685312322670591",
									"description": "(Required) Transaction reference or id"
								},
								{
									"key": "amount",
									"value": "10000",
									"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
								},
								{
									"key": "currency",
									"value": "ZAR",
									"description": "Three-letter ISO currency"
								},
								{
									"key": "customer_note",
									"value": "Refund for transaction T685312322670591",
									"description": "Customer reason"
								},
								{
									"key": "merchant_note",
									"value": "Refund for transaction T685312322670591 by test@me.com",
									"description": "Merchant reason"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refund"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": true,\n  \"message\": \"Refund has been queued for processing\",\n  \"data\": {\n    \"transaction\": {\n      \"id\": 1004723697,\n      \"domain\": \"test\",\n      \"reference\": \"T685312322670591\",\n      \"amount\": 10000,\n      \"paid_at\": \"2021-08-20T18:34:11.000Z\",\n      \"channel\": \"apple_pay\",\n      \"currency\": \"NGN\",\n      \"authorization\": {\n        \"exp_month\": null,\n        \"exp_year\": null,\n        \"account_name\": null\n      },\n      \"customer\": {\n        \"international_format_phone\": null\n      },\n      \"plan\": {},\n      \"subaccount\": {\n        \"currency\": null\n      },\n      \"split\": {},\n      \"order_id\": null,\n      \"paidAt\": \"2021-08-20T18:34:11.000Z\",\n      \"pos_transaction_data\": null,\n      \"source\": null,\n      \"fees_breakdown\": null\n    },\n    \"integration\": 412829,\n    \"deducted_amount\": 0,\n    \"channel\": null,\n    \"merchant_note\": \"Refund for transaction T685312322670591 by test@me.com\",\n    \"customer_note\": \"Refund for transaction T685312322670591\",\n    \"status\": \"pending\",\n    \"refunded_by\": \"test@me.com\",\n    \"expected_at\": \"2021-12-16T09:21:17.016Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"amount\": 10000,\n    \"fully_deducted\": false,\n    \"id\": 3018284,\n    \"createdAt\": \"2021-12-07T09:21:17.122Z\",\n    \"updatedAt\": \"2021-12-07T09:21:17.122Z\"\n  }\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transaction",
									"value": "T685312322670591",
									"description": "(Required) Transaction reference or id"
								},
								{
									"key": "amount",
									"value": "10000",
									"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
								},
								{
									"key": "currency",
									"value": "ZAR",
									"description": "Three-letter ISO currency"
								},
								{
									"key": "customer_note",
									"value": "Refund for transaction T685312322670591",
									"description": "Customer reason"
								},
								{
									"key": "merchant_note",
									"value": "Refund for transaction T685312322670591 by test@me.com",
									"description": "Merchant reason"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refund"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transaction",
									"value": "T685312322670591",
									"description": "(Required) Transaction reference or id"
								},
								{
									"key": "amount",
									"value": "10000",
									"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
								},
								{
									"key": "currency",
									"value": "ZAR",
									"description": "Three-letter ISO currency"
								},
								{
									"key": "customer_note",
									"value": "Refund for transaction T685312322670591",
									"description": "Customer reason"
								},
								{
									"key": "merchant_note",
									"value": "Refund for transaction T685312322670591 by test@me.com",
									"description": "Merchant reason"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refund"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "<Bearer Token>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.paystack.co",
			"type": "string"
		}
	]
}